{"version":3,"sources":["components/Slide.tsx","components/CarouselData.tsx","components/Carousel.tsx","components/Link.tsx","components/Mission.tsx","components/Header.tsx","components/Footer.tsx","components/DemoTableData.tsx","components/Demo.tsx","App.tsx","index.tsx"],"names":["StyledSlide","styled","div","StyledImageContainer","props","src","StyledWrapper","Slide","forwardRef","ref","heading","description","imageUrl","list","StyledCarousel","section","StyledSlideshow","StyledHeader","header","Carousel","useState","useRef","listRefs","buttonLeftRef","buttonRightRef","headerRef","animationTiming","curIndex","slideshowTimer","refreshSlideshow","direction","clearTimeout","setTimeout","length","prevIndex","nextIndex","current","disabled","i","element","removeEventListener","handleClickRight","handleClickLeft","setAttribute","curElement","prevElement","nextElement","headingText","querySelector","supportingText","gsap","timeline","to","xPercent","scale","opacity","zIndex","duration","ease","Power4","easeOut","from","y","event","preventDefault","useEffect","map","li","idx","className","onClick","color","size","StyledLink","a","Link","linkUnderlineRef","linkRef","innerRef","useForwardedRef","linkElement","addEventListener","linkWidth","clientWidth","offset","x","fromTo","visibility","href","children","StyledMission","StyledWrapperLeft","StyledWrapperRight","Mission","headingLeftRef","headingRightRef","firstParagraphRef","secondParagraphRef","horizontalRuleRef","cursorRef","headingWrapperRef","imageRef","registerPlugin","TextPlugin","ScrollTrigger","headingLeftElement","headingRightElement","headingWidth","tl","scrollTrigger","trigger","start","textContent","text","value","preserveSpaces","newClass","type","StyledFlag","Header","flagRef","totalWidth","delay","StyledFooter","footer","StyledLogoWrapper","StyledTopDiv","StyledIconsWrapper","StyledAddress","StyledContact","Footer","topDivRef","bottomDivRef","logoRef","addressRef","contactRef","iconsRef","tlLeft","tlRight","topWidth","name","submissions","time","problem","verdict","StyledDemo","StyledContentWrapper","StyledLeftWrapper","StyledRightWrapper","StyledProgressContainer","StyledProgressBar","StyledTable","table","Demo","submissionList","j","push","team","sort","b","console","log","getSubmissions","teamsCount","tableRows","tableSize","cellRefs","resultRefs","demoRef","tableRef","progressRef","leftWrapperRef","vh","document","documentElement","clientHeight","prevProgress","handleScroll","demoElement","offsetHeight","offsetTop","height","animationHeight","curProgress","window","scrollY","Math","max","min","timestamp","classList","remove","problemStatus","Array","fill","problemSolved","solvedCount","submission","abs","status","String","add","updateTable","onscroll","_","fromCharCode","el","StyledApp","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88982b26.chunk.js","sourcesContent":["import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { SlideProps } from \"./types\";\n\nconst StyledSlide = styled.div`\n  width: 100%;\n  height: 100%;\n  color: white;\n  position: absolute;\n\n  h1 {\n    font-size: 2rem;\n  }\n\n  p {\n    font-size: 1.5rem;\n  }\n`\n\nconst StyledImageContainer = styled.div<{ src: string }>`\n  background-image: url(${(props) => (props.src)});\n  background-repeat: no-repeat;\n  background-size: cover;\n  align-self: stretch;\n  flex: 1;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.5);\n`\n\nconst StyledWrapper = styled.div`\n  width: 100%;  \n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  /* &:hover {\n    transform: scale(1.1);\n    transition: transform 0.5s ease-in-out;\n  } */\n`\n\nconst Slide = forwardRef<HTMLDivElement | null, SlideProps>((props, ref) => (\n  <StyledSlide ref={ref}>\n    <StyledWrapper>\n      <h1>{props.heading}</h1>\n      <p>{props.description}</p>\n      <StyledImageContainer src={props.imageUrl} />\n    </StyledWrapper>\n  </StyledSlide>\n)) \n\nexport default Slide","import { SlideProps } from \"./types\";\n\nconst list : SlideProps[] = [\n  {\n    imageUrl: \"/assets/2016-winners.jpeg\",\n    heading: \"Finals 2016\",\n    description: \"May 15-20, Phuket\"\n  },\n  {\n    imageUrl: \"/assets/2017-winners.jpeg\",\n    heading: \"Finals 2017\",\n    description: \"May 20-25, Rapid City\"\n  },\n  {\n    imageUrl: \"/assets/2018-winners.jpeg\",\n    heading: \"Finals 2018\",\n    description: \"April 15-20, Peking University\"\n  },\n  {\n    imageUrl: \"/assets/2019-winners.jpeg\",\n    heading: \"Finals 2019\",\n    description: \"March 31 - April 5, Porto\"\n  },\n  {\n    imageUrl: \"/assets/2020-winners.jpeg\",\n    heading: \"Finals 2020\",\n    description: \"October 1-5, Moscow (2021)\"\n  }\n]\n\nexport default function getData() : SlideProps[] {\n  return list;\n}","import { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport Slide from \"./Slide\"\nimport { SlideProps } from \"./types\"\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\"\nimport { gsap, Power4 } from \"gsap\"\nimport getData from './CarouselData'\n\nconst StyledCarousel = styled.section`\n  background-color: var(--color-gray-700);\n  padding: 2rem 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  button {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 2;\n    border: 0;\n    border-radius: 0;\n    background-color: transparent;\n  }\n\n  button:hover svg {\n    transform: scale(1.2);\n  }\n\n  button[disabled] svg {\n    fill: darkgrey;\n  }\n\n  .left {\n    left: 5rem;    \n  }\n\n  .right {\n    right: 5rem;\n  }\n`\n\nconst StyledSlideshow = styled.div`\n  margin: 0 auto;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  width: 50vw;\n  height: calc(50vw * 2 / 3);\n`\n\nconst StyledHeader = styled.header`\n  margin-bottom: 6rem;\n  font-size: 2.5rem;\n  color: white;\n  text-align: center;\n`\n\nexport default function Carousel() : JSX.Element {\n  const [list] = useState<SlideProps[]>(getData())\n  const [listRefs] = useState<MutableRefObject<HTMLDivElement | null>[]>([\n    useRef<(HTMLDivElement | null)>(null),\n    useRef<(HTMLDivElement | null)>(null),\n    useRef<(HTMLDivElement | null)>(null),\n    useRef<(HTMLDivElement | null)>(null),\n    useRef<(HTMLDivElement | null)>(null)\n  ])\n\n  const buttonLeftRef = useRef<(HTMLButtonElement | null)>(null);\n  const buttonRightRef = useRef<(HTMLButtonElement | null)>(null);\n  const headerRef = useRef<(HTMLDivElement | null)>(null);\n\n  const animationTiming : number = 1.5\n  let curIndex : number = 0\n  let slideshowTimer: NodeJS.Timeout | null = null\n\n  useEffect(() => {\n    refreshSlideshow(0);\n\n    gsap.from(headerRef.current, {\n      y: -100,\n      opacity: 0,\n      duration: 2\n    })\n  }, [])\n\n  function refreshSlideshow(direction : number) {\n    if (slideshowTimer !== null) {\n      clearTimeout(slideshowTimer)\n    }\n\n    if (slideshowTimer !== null) {\n      clearTimeout(slideshowTimer)\n    }\n\n    slideshowTimer = setTimeout(() => {\n      curIndex = (curIndex + 1) % list.length\n      refreshSlideshow(1)\n    }, 10000)\n\n    let prevIndex = (curIndex + list.length - 1) % list.length;\n    let nextIndex = (curIndex + 1) % list.length;\n    \n    (buttonLeftRef.current as HTMLButtonElement).disabled = true;\n    (buttonRightRef.current as HTMLButtonElement).disabled = true;\n\n    for (let i = 0; i < list.length; i++) {\n      let element = listRefs[i].current as HTMLDivElement; \n      element.removeEventListener('click', handleClickRight)\n      element.removeEventListener('click', handleClickLeft)\n      element.setAttribute('style', 'opacity: 0;')\n    }\n\n    let curElement = listRefs[curIndex].current as HTMLDivElement\n    let prevElement = listRefs[prevIndex].current as HTMLDivElement\n    let nextElement = listRefs[nextIndex].current as HTMLDivElement\n\n    let headingText = curElement.querySelector('h1')\n    let supportingText = curElement.querySelector('p')\n    let tl = gsap.timeline()\n\n    tl.to(curElement, {\n      xPercent: 0,\n      scale: 1.1,\n      opacity: 1,\n      zIndex: 1,\n      duration: animationTiming,\n      ease: Power4.easeOut\n    }).from(headingText, {\n      y: 100,\n      opacity: 0,\n      duration: 0.7,\n    }).from(supportingText, {\n      y: 100,\n      opacity: 0,\n      duration: 0.7,\n    }, \"<\")\n    \n    gsap.to(prevElement, {\n      xPercent: -70,\n      scale: 0.8,\n      opacity: 0.5,\n      duration: animationTiming,\n      ease: Power4.easeOut,\n    })\n\n    gsap.to(nextElement, {\n      xPercent: 70,\n      scale: 0.8,\n      opacity: 0.5,\n      duration: animationTiming,\n      ease: Power4.easeOut,\n    })\n\n    setTimeout(() => {\n      (buttonLeftRef.current as HTMLButtonElement).disabled = false;\n      (buttonRightRef.current as HTMLButtonElement).disabled = false;\n    }, (animationTiming + 0.1) * 1000)\n  }\n\n  function handleClickRight(event : any) { \n    event.preventDefault();\n\n    if (buttonRightRef.current?.disabled === true) {\n      return\n    }\n\n    curIndex = (curIndex + 1) % list.length\n    refreshSlideshow(1)\n  }\n\n  function handleClickLeft(event : any) {\n    event.preventDefault();\n\n    if (buttonLeftRef.current?.disabled === true) {\n      return\n    }\n\n    curIndex = (curIndex + list.length - 1) % list.length\n    refreshSlideshow(-1)\n  }\n\n  return (\n    <StyledCarousel>\n      <StyledHeader ref={headerRef}>\n        <h1>\n          See the history\n        </h1>\n      </StyledHeader>\n      <StyledSlideshow>\n        {\n          list.map((li, idx) => {\n            return (\n              <Slide {...li} ref={listRefs[idx]} />\n            )\n          })\n        }\n      </StyledSlideshow>\n\n      <button className=\"left\" ref={buttonLeftRef} onClick={handleClickLeft}>\n        <FaChevronLeft color=\"white\" size=\"4rem\"/>\n      </button>\n\n      <button className=\"right\" ref={buttonRightRef} onClick={handleClickRight}>\n        <FaChevronRight color=\"white\" size=\"4rem\"/>\n      </button>\n    </StyledCarousel>\n  )\n}","import { ForwardedRef, forwardRef, useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { LinkProps } from \"./types.d\"\nimport { gsap } from \"gsap\"\n\nconst StyledLink = styled.a`\n  display: inline-block;\n  text-decoration: none; \n  color: var(--color-rose-300);\n\n  hr {\n    width: 20px;\n    visibility: hidden;\n    border-color: white;\n  }\n`\n\nconst useForwardedRef = (ref : ForwardedRef<HTMLAnchorElement | null>) => {\n  const innerRef = useRef<HTMLAnchorElement | null>(null);\n\n  useEffect(() => {\n      if (!ref) return;\n\n      if (typeof ref === 'function') {\n        (ref as Function)(innerRef.current);\n      } else {\n        ref.current = innerRef.current;\n      }\n    });\n\n  return innerRef;\n}\n\nconst Link = forwardRef<HTMLAnchorElement | null, LinkProps>((props, ref) => {\n  let linkUnderlineRef = useRef<(HTMLHRElement | null)>(null)\n  const linkRef = useForwardedRef(ref)\n\n  useEffect(() => {\n    let linkElement = linkRef.current as HTMLAnchorElement\n\n    if (linkRef && linkElement) {\n      linkElement.addEventListener('mouseenter', () => {\n        let linkWidth = linkElement.clientWidth\n\n        if (props.offset) {\n          gsap.to(linkElement, {\n            x: props.offset \n          })\n        }\n\n        gsap.fromTo(linkUnderlineRef.current, {\n          visibility: 'hidden',\n          x: 0,\n          opacity: 1,\n          duration: 1\n        }, {\n          visibility: 'visible',\n          x: linkWidth - 20,\n          opacity: 0,\n          duration: 1\n        })\n      })\n\n      if (props.offset) {\n        linkElement.addEventListener('mouseleave', () => {\n          gsap.to(linkElement, {\n            x: 0\n          })\n        })\n      }\n    }\n  }, [])\n\n  return (\n    <StyledLink href={props.href} ref={linkRef}>\n      {props.children}\n      <hr ref={linkUnderlineRef} />\n    </StyledLink>\n  )\n})\n\nexport default Link","import styled from \"styled-components\";\nimport { gsap } from \"gsap\";\nimport { useEffect, useRef } from \"react\";\nimport { TextPlugin } from \"gsap/TextPlugin\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { FaArrowRight } from \"react-icons/fa\";\nimport Link from \"./Link\";\n\nconst StyledMission = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: var(--color-gray-900);\n  color: white;\n  padding: 3rem;\n`\n\nconst StyledWrapperLeft = styled.div`\n  flex: 1;\n  margin-right: 2rem;\n\n  h2 {\n    white-space: pre;\n    font-size: 3.5rem;\n    margin-bottom: 0.5rem;\n    display: inline-block;\n  }\n\n  span {\n    font-size: 3.5rem;\n    opacity: 1;\n  }\n\n  hr {\n    visibility: hidden;\n    border-color: white;\n  }\n\n  & > hr {\n    margin-bottom: 1rem;\n    margin-right: 3rem;\n    width: 100px;\n  }\n\n  p {\n    color: var(--color-gray-300);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;\n    line-height: 1.4;\n  }\n\n  a {\n    color: var(--color-rose-300);\n  }\n\n  a span {\n    font-size: 1.5rem;\n    margin-right: 0.5rem;\n    vertical-align: 0.25rem;\n  }\n\n  span.highlight {\n    color: var(--color-rose-300);\n  }\n`\n\nconst StyledWrapperRight = styled.div`\n  width: 35vw;\n  height: calc(35vw * 4 / 3);\n  background: url('/assets/tourist.jpeg') no-repeat center center; \n  background-size: cover;\n`\n\nexport default function Mission() : JSX.Element {\n  let headingLeftRef = useRef<(HTMLHeadingElement | null)>(null)\n  let headingRightRef = useRef<(HTMLHeadingElement | null)>(null)\n  let firstParagraphRef = useRef<(HTMLParagraphElement | null)>(null)\n  let secondParagraphRef = useRef<(HTMLParagraphElement | null)>(null)\n  let horizontalRuleRef = useRef<(HTMLHRElement | null)>(null)\n  let cursorRef = useRef<(HTMLSpanElement | null)>(null)\n  let headingWrapperRef = useRef<(HTMLDivElement | null)>(null)\n  let imageRef = useRef<HTMLDivElement | null>(null)\n  let linkRef = useRef<HTMLAnchorElement | null>(null)\n\n  useEffect(() => {\n    gsap.registerPlugin(TextPlugin, ScrollTrigger);\n\n    let headingLeftElement = headingLeftRef.current as HTMLHeadingElement\n    let headingRightElement = headingRightRef.current as HTMLHeadingElement\n\n    let headingWidth = (headingWrapperRef.current as HTMLDivElement).clientWidth\n\n    let tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: headingLeftElement,\n        start: \"bottom bottom\"\n      }\n    })\n\n    headingLeftElement.textContent = ''\n    headingRightElement.textContent = ''\n\n    tl.to(headingLeftElement, {\n      duration: 1,\n      text: {\n        value: 'Never forget ',\n        preserveSpaces: true\n      },\n      ease: 'none'\n    }).to(headingRightElement, {\n      duration: 1,\n      text: 'the nerds',\n      ease: 'none'\n    }).to(headingRightElement, {\n      duration: 1,\n      text: '',\n      ease: 'none'\n    }).to(headingRightElement, {\n      duration: 1,\n      text: 'the coders',\n      ease: 'none'\n    }).to(headingRightElement, {\n      duration: 1,\n      text: '',\n      ease: 'none'\n    }).to(headingRightElement, {\n      duration: 1.5,\n      text: {\n        value: 'the legends',\n        newClass: 'highlight',\n        type: 'diff'\n      },\n      ease: 'none'\n    }).to(cursorRef.current, {\n      duration: 0.5,\n      opacity: 0\n    }).fromTo(horizontalRuleRef.current, {\n      visibility: 'hidden',\n      x: -100,\n      opacity: 1,\n      duration: 1.5\n    }, {\n      visibility: 'visible',\n      x: headingWidth,\n      opacity: 0,\n      duration: 1.5\n    }).from(firstParagraphRef.current, {\n      x: -200,\n      opacity: 0,\n      duration: 1,\n    }).from(secondParagraphRef.current, {\n      y: 200,\n      opacity: 0,\n      duration: 1,\n    }, \"<\").from(imageRef.current, {\n      x: 200,\n      opacity: 0,\n      duration: 1,\n    }, \"<\").fromTo(linkRef.current, {\n      y: 200, \n      opacity: 0,\n      duration: 1,\n      visibility: 'hidden'\n    }, {\n      visibility: 'visible',\n      y: 0,\n      opacity: 1,\n      duration: 1,\n    })\n  })\n\n  return (\n    <StyledMission>\n      <StyledWrapperLeft>\n        <div ref={headingWrapperRef}>\n          <h2 ref={headingLeftRef}>Never forget</h2>\n          <h2 ref={headingRightRef}>the legends</h2>\n          <span ref={cursorRef}>|</span>\n        </div>\n\n        <hr ref={horizontalRuleRef} />\n        <p ref={firstParagraphRef}>\n          The <strong>International Collegiate Programming Contest</strong>, known as the ICPC, is an annual multi-tiered competitive programming competition among the universities of the world.\n          The ICPC traces its roots to a competition held at Texas A&amp;M University in 1970 and there is no denying that it played an enormous role in the development and popularization of competitive programming.\n        </p>\n        <p ref={secondParagraphRef}>\n          However, most of images, scoreboards and participant names have been either lost or forgotten by the community. <strong>We believe that heroes deserve to be known by public</strong>, thus it motivated us to create this wonderful resource and make an effort to preserve history.\n        </p>\n\n        <Link href=\"https://icpc.global/\" ref={linkRef} offset='1rem'>\n          <span>Learn more</span>\n          <FaArrowRight size={'1.5rem'}/>\n        </Link>\n      </StyledWrapperLeft>\n      <StyledWrapperRight ref={imageRef}>\n\n      </StyledWrapperRight>\n    </StyledMission>\n  )\n}","import styled from \"styled-components\";\nimport { gsap } from \"gsap\";\nimport { useEffect, useRef } from \"react\";\nimport { FaMedal } from \"react-icons/fa\";\n\nconst StyledHeader = styled.header`\n  background-color: var(--color-bg);\n  height: 4rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  h1 {\n    text-align: center;\n    font-size: 2.5rem;\n  }\n`\n\nconst StyledFlag = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: var(--color-bg);\n  z-index: 1;\n`\n\nconst StyledWrapper = styled.div`\n  position: relative;\n`\n\nexport default function Header() : JSX.Element {\n  const headerRef = useRef<HTMLHeadingElement | null>(null)\n  const flagRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    let totalWidth = (headerRef.current as HTMLDivElement).clientWidth\n    gsap.to(flagRef.current, {x: totalWidth, duration: 4, delay: 1})\n  }, [])\n\n  return (\n    <StyledHeader>\n      <StyledWrapper>\n        <h1 ref={headerRef}>\n          ICPC World Finals Results\n        </h1>\n        <StyledFlag ref={flagRef}>\n          <FaMedal color=\"white\" size=\"2.5rem\"/>\n        </StyledFlag>\n      </StyledWrapper>\n    </StyledHeader>\n  )\n}","import styled from \"styled-components\";\nimport { FaMedal, FaFacebookSquare, FaTwitterSquare, FaInstagramSquare } from \"react-icons/fa\";\nimport { gsap } from \"gsap\";\nimport { useEffect, useRef } from \"react\";\nimport Link from \"./Link\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\n\nconst StyledFooter = styled.footer`\n  background-color: var(--color-bg);\n  color: var(--color-gray-300);\n  padding: 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst StyledWrapperLeft = styled.div`\n  \n`\n\nconst StyledLogoWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  text-align: left;\n  background-color: var(--color-bg);\n\n  span {\n    font-size: 2.5rem;\n    font-weight: 700;\n  }\n`\n\nconst StyledTopDiv = styled.div`\n  position: relative;\n  width: 25vw;\n  overflow: hidden;\n\n  hr {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    transform: translateY(-50%);\n    border-color: white;\n    background-color: white;\n  }\n`\n\nconst StyledWrapperRight = styled.div`\n  .address {\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst StyledIconsWrapper = styled.div`\n  a {\n    color: var(--color-gray-300);\n  }\n\n  & svg {\n    margin-right: 1rem;\n    transform: scale(1.0);\n    transition: transform 0.25s linear;\n  }\n\n  & svg:hover {\n    transform: scale(1.2);\n    transition: transform 0.25s linear;\n    color: white;\n  }\n`\n\nconst StyledAddress = styled.div`\n  margin-bottom: 0.5rem;\n`\n\nconst StyledContact = styled.div`\n  margin-bottom: 0.5rem;\n  display: flex;\n\n  & > span {\n    margin: 0 0.25rem;\n    align-self: stretch;\n  }\n`\n\nexport default function Footer() : JSX.Element {\n  const topDivRef = useRef<HTMLDivElement | null>(null)\n  const bottomDivRef = useRef<HTMLDivElement | null>(null)\n  const logoRef = useRef<HTMLDivElement | null>(null)\n  const addressRef = useRef<HTMLDivElement | null>(null)\n  const contactRef = useRef<HTMLDivElement | null>(null)\n  const iconsRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    setTimeout(() => {\n      gsap.registerPlugin(ScrollTrigger)\n\n      let tlLeft = gsap.timeline({\n        scrollTrigger: {\n          trigger: logoRef.current,\n          start: \"bottom bottom\"\n        }\n      })\n\n      let tlRight = gsap.timeline({\n        scrollTrigger: {\n          trigger: logoRef.current,\n          start: \"bottom bottom\"\n        }\n      })\n\n      let topWidth = (topDivRef.current as HTMLDivElement).clientWidth;\n\n      tlLeft.from(logoRef.current, {  \n        x: topWidth, \n        duration: 2\n      })\n\n      tlLeft.from(bottomDivRef.current, {\n        y: 200,\n        opacity: 0,\n        duration: 1\n      })\n\n      tlRight.from(addressRef.current, {\n        x: 200,\n        opacity: 0,\n        duration: 1\n      })\n\n      tlRight.from(contactRef.current, {\n        x: 200,\n        opacity: 0,\n        duration: 1\n      })\n\n      tlRight.from(iconsRef.current, {\n        x: 200,\n        opacity: 0,\n        duration: 1\n      })\n    }, 100)\n  }, [])\n\n  return (\n    <StyledFooter>\n      <StyledWrapperLeft> \n        <StyledTopDiv ref={topDivRef}>\n          <hr />\n          <StyledLogoWrapper ref={logoRef}> \n            <span>ICPC Results</span>\n            <FaMedal size=\"2rem\" color=\"white\" />\n          </StyledLogoWrapper>\n        </StyledTopDiv>\n        <div className=\"bottom\" ref={bottomDivRef}>\n          <p>\n            My company Inc &bull; All Rights reserved\n          </p>\n        </div>\n      </StyledWrapperLeft>\n      <StyledWrapperRight>\n        <StyledAddress ref={addressRef}>\n          <p>Spain, Barcelona</p>\n          <p>Carrer de Rosa Sensat 9-11</p>\n        </StyledAddress>\n\n        <StyledContact ref={contactRef}>\n          <Link href=\"#\">\n            <span>\n              (34) 617-715-146\n            </span>\n          </Link>\n          <span>&bull;</span>\n          <Link href=\"#\">\n            <span>\n              bthero09@gmail.com\n            </span>\n          </Link>\n        </StyledContact>\n\n        <StyledIconsWrapper ref={iconsRef}>\n          <a href=\"https://www.facebook.com/\">\n            <FaFacebookSquare size='2rem' />\n          </a>\n\n          <a href=\"https://www.instagram.com/\">\n            <FaInstagramSquare size='2rem' />\n          </a>\n\n          <a href=\"https://twitter.com/\">\n            <FaTwitterSquare size='2rem' />\n          </a>\n        </StyledIconsWrapper>\n      </StyledWrapperRight>\n    </StyledFooter>\n  )\n}","import { TeamData, Submission } from \"./types\"\n\nconst contestDuration = 120\nconst problemsCount = 6\n\nconst list : TeamData[] = [\n  {\n    name: \"Harbour.Space University\",\n    submissions: [{\n        time: 1,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 7,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 18,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 36,\n        problem: 3,\n        verdict: true\n      },\n      {\n        time: 50,\n        problem: 4,\n        verdict: false\n      },\n      {\n        time: 57,\n        problem: 4,\n        verdict: true\n      }\n    ]\n  },\n  {\n    name: \"ITMO University\",\n    submissions: [{\n        time: 0.55,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 4.7,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 10.6,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 29.6,\n        problem: 3,\n        verdict: true\n      },\n      {\n        time: 67.35,\n        problem: 4,\n        verdict: false\n      },\n      {\n        time: 112,\n        problem: 5,\n        verdict: false\n      },\n      {\n        time: 114,\n        problem: 5,\n        verdict: false\n      },\n      {\n        time: 116,\n        problem: 5,\n        verdict: true\n      }\n    ]\n  },\n  {\n    name: \"Moscow State University\",\n    submissions: [{\n        time: 1,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 16,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 18,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 27,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 71,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 82,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 85,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 88,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 97,\n        problem: 3,\n        verdict: true\n      }\n    ]\n  },\n  {\n    name: \"Higher School of Economics\",\n    submissions: [{\n        time: 1,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 15,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 18,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 53,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 105,\n        problem: 3,\n        verdict: true\n      }\n    ]\n  },\n  {\n    name: \"Massachusetts Institute of Technology\",\n    submissions: [{\n        time: 1,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 28,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 47,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 116,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 119,\n        problem: 3,\n        verdict: false\n      }\n    ]\n  },\n  {\n    name: \"Harvard University\",\n    submissions: [{\n        time: 0.5,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 14,\n        problem: 1,\n        verdict: true\n      },\n      {\n        time: 26,\n        problem: 2,\n        verdict: true\n      },\n      {\n        time: 93,\n        problem: 3,\n        verdict: false\n      },\n      {\n        time: 97,\n        problem: 3,\n        verdict: false\n      }\n    ]\n  },\n  {\n    name: \"KAIST\",\n    submissions: [{\n        time: 13.1,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 47.1,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 86,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 91.65,\n        problem: 1,\n        verdict: true\n      }\n    ]\n  },\n  {\n    name: \"Kazakh-British Technical University\",\n    submissions: [{\n        time: 3.05,\n        problem: 0,\n        verdict: true\n      },\n      {\n        time: 72.25,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 81.6,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 87.33,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 89.65,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 92.05,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 97.25,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 107.55,\n        problem: 1,\n        verdict: false\n      },\n      {\n        time: 110.05,\n        problem: 1,\n        verdict: false\n      }\n    ]\n  }\n]\n\nexport function getData() {\n  return list\n}\n\nexport function getSubmissions() {\n  let submissionList : Submission[] = []\n\n  for (let i = 0; i < list.length; i++) {\n    for (let j = 0; j < list[i].submissions.length; j++) {\n      let current = list[i].submissions[j]\n      submissionList.push({...current, team: i})\n    }\n  }\n\n  submissionList.sort((a, b) => {\n    return a.time - b.time\n  })\n\n  console.log(submissionList)\n  return submissionList\n}\n\nexport function getContestDuration() {\n  return contestDuration\n}\n\nexport function getProblemsCount() {\n  return problemsCount\n}\n\nexport function getTeamsCount() {\n  return list.length\n}","import { useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { Submission } from \"./types\"\nimport {\n  getContestDuration, \n  getData, \n  getProblemsCount, \n  getSubmissions, \n  getTeamsCount \n} from \"./DemoTableData\"\nimport { gsap } from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport Link from \"./Link\"\nimport { FaArrowRight } from \"react-icons/fa\"\n\nconst StyledDemo = styled.section`\n  padding: 8rem 3rem;\n  background-color: var(--color-gray-700);\n\n  & > a {\n    font-size: 2rem;\n    text-align: center;\n  }\n`\n\nconst StyledHeader = styled.header`\n  margin-bottom: 2rem;\n\n  h2 {\n    font-size: 3.5rem;\n    color: white;\n  }\n`\n\nconst StyledContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  color: var(--color-gray-300);\n`\n\nconst StyledLeftWrapper = styled.div`\n  flex: 3; \n  margin-right: 2rem;\n\n  p {\n    font-size: 1.5rem;\n    line-height: 1.4;\n    margin-bottom: 2rem;\n  }\n\n  a {\n    display: inline-block;\n    font-size: 1.5rem;  \n  }\n  \n  a span {\n    margin-right: 0.5rem;\n    vertical-align: 0.25rem;\n  }\n`\n\nconst StyledRightWrapper = styled.div`\n  flex: 4;\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  justify-content: flex-start;\n`\n\nconst StyledProgressContainer = styled.div`\n  margin-top: 0.5rem;\n  border: solid 2px white;\n  border-radius: 0.75rem;\n  background-color: darkgrey;\n  height: 1.5rem;\n  align-self: stretch;\n  padding: 0.125rem 0.125rem;\n`\n\nconst StyledProgressBar = styled.div`\n  background-color: var(--color-blue-light-400);\n  border-radius: 0.5rem;\n  height: 100%;\n  text-align: right;\n`\n\nconst StyledTable = styled.table`\n  color: white;\n  border-collapse: separate;\n  border-spacing: 0.25rem;\n  font-size: 1.25rem;\n  text-align: center;\n  align-self: stretch;\n\n  td, th {\n    padding: 0.25rem 0.5rem;\n  }\n\n  td:not(:nth-of-type(1)) {\n    font-size: 1.25rem;\n    width: 2.5rem;\n    height: 2.5rem;\n    background-color: var(--color-gray-700);\n    border: 1px solid white;\n    border-radius: 3px;\n    color: var(--color-gray-700);\n  }\n\n  td.solved {\n    background-color: var(--color-success-400);\n  }\n\n  td.attempted {\n    background-color: var(--color-error-500);\n  }\n\n  td.first-solve {\n    background-color: var(--color-success-600);\n  }\n\n  td {\n    border-bottom: 1px solid white;\n  }\n\n  td:nth-of-type(1), td:nth-last-of-type(1) {\n    color: white;\n    font-weight: 700;\n  }\n`\n\nexport default function Demo() : JSX.Element {\n  const list = getData()\n  const submissions = getSubmissions()\n  const problemsCount = getProblemsCount()\n  const teamsCount = getTeamsCount()\n  const contestDuration = getContestDuration()\n\n  const tableRows = teamsCount\n  const tableColumns = problemsCount\n  const tableSize = tableRows * tableColumns\n\n  const cellRefs = useRef<Array<HTMLTableCellElement | null>>([])\n  const resultRefs = useRef<Array<HTMLTableCellElement | null>>([])\n\n  const demoRef = useRef<HTMLDivElement | null>(null)\n  const headerRef = useRef<HTMLDivElement | null>(null)\n  const tableRef = useRef<HTMLTableElement | null>(null)\n  const progressRef = useRef<HTMLDivElement | null>(null)\n  const leftWrapperRef = useRef<HTMLDivElement | null>(null)\n\n  const vh = document.documentElement.clientHeight\n  let prevProgress = 0\n\n  function updateTable(timestamp : number) {\n    for (let i = 0; i < tableSize; i++) {\n      let element = cellRefs.current[i] as HTMLTableCellElement\n      element.textContent = ''\n      element.classList.remove(...(element.classList as any))\n    }\n\n    for (let i = 0; i < teamsCount; i++) {\n      let element = resultRefs.current[i] as HTMLTableCellElement\n      element.textContent = '0'\n    }\n\n    let problemStatus : Array<number> = Array(tableSize).fill(0)\n    let problemSolved : Array<boolean> = Array(problemsCount).fill(false)\n    let solvedCount : Array<number> = Array(teamsCount).fill(0)\n\n    for (let i = 0; i < submissions.length; i++) {\n      let submission : Submission = submissions[i]\n      let team = submission.team || 0\n      let problem = submission.problem\n      let idx = team * tableColumns + problem\n      let element = cellRefs.current[idx] as HTMLTableCellElement\n\n      if (submission.time <= timestamp) {\n        problemStatus[idx]--\n\n        if (submission.verdict === true) {\n          problemStatus[idx] = Math.abs(problemStatus[idx])\n        }\n\n        let status = problemStatus[idx]\n\n        if (status < 0) {\n          element.textContent = String((status === 0 ? '' : Math.abs(status)))\n          element.classList.add('attempted')\n        }\n        else {\n          element.textContent = String((status === 0 ? '' : status))\n          element.classList.remove('attempted')\n          solvedCount[team]++\n          let countElement = resultRefs.current[team] as HTMLTableCellElement\n          countElement.textContent = `${solvedCount[team]}`\n\n          if (problemSolved[problem]) {\n            element.classList.add('solved')\n          }\n          else {\n            element.classList.add('first-solve');\n            problemSolved[problem] = true\n          }\n        }\n      }\n    }\n  }\n\n  function handleScroll() {\n    let demoElement = demoRef.current as HTMLDivElement\n    let offsetHeight = demoElement.offsetTop\n    let height = demoElement.offsetHeight\n    let animationHeight = height * 0.5\n\n    let curProgress = window.scrollY + vh * 0.8 - offsetHeight\n    curProgress = Math.max(curProgress - (height - animationHeight) / 2, 0)\n    curProgress = Math.min(curProgress, animationHeight)\n\n    if (prevProgress !== curProgress) {\n      console.log(curProgress)\n      let progressElement = progressRef.current as HTMLDivElement\n      progressElement.setAttribute('style', `width: ${curProgress / animationHeight * 100}%`)\n      updateTable(curProgress * contestDuration / animationHeight)\n\n      if (prevProgress < curProgress) {\n        console.log('scrolled down')\n      }\n      else {\n        console.log('scrolled up')\n      }\n\n      prevProgress = curProgress\n    }\n  }\n\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger)\n    window.onscroll = handleScroll\n\n    gsap.from(headerRef.current, {\n      x: -300,\n      opacity: 0,\n      duration: 1.5,\n      scrollTrigger: headerRef.current\n    })\n\n    gsap.from(leftWrapperRef.current, {\n      y: 300,\n      opacity: 0,\n      duration: 1.5,\n      ScrollTrigger: headerRef.current\n    })\n\n    gsap.from(tableRef.current, {\n      x: 300,\n      opacity: 0,\n      duration: 1.5,\n      scrollTrigger: headerRef.current\n    })\n  }, [])\n\n  return (\n    <StyledDemo ref={demoRef}>\n      <StyledHeader ref={headerRef}>\n        <h2>See the action in real time</h2>\n        <hr />\n      </StyledHeader>\n      <StyledContentWrapper>\n        <StyledLeftWrapper ref={leftWrapperRef}>\n          <p>\n            The time goes on, but scoreboards never seem to improve on quality. A major part of our mission is to fix this issue and provide the users with the best experience. The scoreboards are fully animated from the first minute down to the last one. Ever wanted to feel the atmosphere and pressure of a competition? Well, welcome to our website!\n          </p>\n          <Link \n            href=\"https://icpc.global/\"\n            offset=\"2rem\"\n          >\n            <span>\n              See more\n            </span>\n            <FaArrowRight size=\"1.5rem\" />\n          </Link>\n        </StyledLeftWrapper>\n\n        <StyledRightWrapper>\n          <StyledProgressContainer>\n            <StyledProgressBar ref={progressRef}>\n            </StyledProgressBar>\n          </StyledProgressContainer>\n          <StyledTable ref={tableRef}>\n            <thead>\n              <tr>\n                <th></th>\n                {\n                  [...Array(tableColumns)].map((_, idx) => {\n                    return (\n                      <th>\n                        {String.fromCharCode(65 + idx)}\n                      </th>\n                    )\n                  })\n                }\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                [...Array(tableRows)].map((_, i) => {\n                  return (\n                    <tr>\n                      <td>\n                        {list[i].name}\n                      </td>\n                      {\n                        [...Array(tableColumns)].map((_, j) => {\n                          return (\n                            <td ref={el => cellRefs.current[i * tableColumns + j] = el}></td>\n                          )\n                        })\n                      }\n                      <td ref={el => resultRefs.current[i] = el}>\n                        0\n                      </td>\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </StyledTable>\n        </StyledRightWrapper>\n      </StyledContentWrapper>\n    </StyledDemo>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Carousel from './components/Carousel';\nimport Mission from './components/Mission';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Demo from './components/Demo';\n\nconst StyledApp = styled.div`\n  overflow: hidden;\n`\n\nexport default function App() : JSX.Element {\n  return (\n    <StyledApp>\n      <Header />\n      <Carousel />\n      <Mission />\n      <Demo />\n      <Footer />\n    </StyledApp>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}